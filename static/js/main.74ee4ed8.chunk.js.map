{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","logic/database.js","logic/utility.js","logic/campaign.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/PlayerSlot.jsx","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","scenes/characterSelection/CharacterSelection.jsx","scenes/characterSelection/index.js","components/cursor/Cursor.jsx","components/cursor/CursorGhost.jsx","components/toastMessage/ToastMessageContainer.jsx","components/toastMessage/index.js","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","onKeyPressEnter","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","onKeyPress","window","event","key","required","appVersion","CLIENT_SCENES","LSKEY","G","Gun","dbLog","message","params","dbPut","dbObjId","data","Promise","get","put","ack","dbRead","once","requestedData","dbSubscribe","on","_msg","_ev","dbUnsubscribe","off","uuidv4","replace","c","r","Math","random","toString","getRandomCampaignKey","result","characters","i","push","charAt","floor","length","join","cursorXPctToPx","x","viewport","width","cursorYPctToPx","y","height","createCampaign","clientData","a","newGame","creatorDeviceId","deviceId","deleteCampaign","deleted","updateCampaign","campaignData","joinCampaign","onCampaignChange","campaign","updateMyPlayer","leaveCampaign","playerId","resetMyPlayer","campaignKey","myPlayerData","userName","clientScene","cursor","hide","Menu","changeUserName","changeCampaignKey","changeClientScene","softResetClientData","mergeGameData","addToastMessage","name","setName","onCreateCampaign","onJoinCampaign","onContinueCampaign","error","onLeaveCampaign","PlayerSlot","color","itsAMe","onSelectPlayer","customClass","useMemo","filter","spanText","Pregame","gameData","changePlayerId","onSelectPlayerSlot","newPlayerId","playerBlue_userName","playerBlue_deviceId","playerRed_userName","playerRed_deviceId","playerGreen_userName","playerGreen_deviceId","playerYellow_userName","playerYellow_deviceId","JoinPregame","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","CharacterSelection","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorColor","cursorClass","mouseDown","mouseUp","handleMouseMove","cursorPositionPx2Pct","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","useEffect","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","style","transform","CursorGhost","ToastMessageContainer","messages","map","App","toastMessages","setToastMessages","deleteToastMessage","prev","toastMessage","setTimeout","lsValue","JSON","parse","localStorage","getItem","defaultValues","setClientData","setItem","stringify","newScene","newUserName","newCampaignKey","newValue","setGameData","leaveCampaignApp","innerHeight","innerWidth","setViewport","handleResize","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.74ee4ed8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 29;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      className={\"simple-button\" + (disabled ? \" disabled\" : \"\")}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  placeholder,\r\n  onKeyPressEnter,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n  const onKeyPress = useCallback((e) => {\r\n    if (!e) e = window.event;\r\n    var keyCode = e.code || e.key;\r\n    if (keyCode === \"Enter\" && onKeyPressEnter) {\r\n      onKeyPressEnter();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  onKeyPressEnter: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n  onKeyPressEnter: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","export const appVersion = \"0.0.5\";\r\n\r\nexport const CLIENT_SCENES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  CHARACTER_SELECTION: \"character_selection\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"CLIENT_DATA\",\r\n};\r\n","import Gun from \"gun\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\nconst dbLogActive = false;\r\n\r\nconst dbLog = (message?: any, ...params: any[]) => {\r\n  if (dbLogActive) console.log(message, ...params);\r\n};\r\n\r\nexport const dbPut = (dbObjId, data) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(data, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" stored: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbDelete = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(null, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" deleted: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbRead = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).once((requestedData) => {\r\n      dbLog(\"Data \" + dbObjId + \" read: \", requestedData);\r\n      resolve(requestedData);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbSubscribe = (dbObjId, onChange) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).on((value, key, _msg, _ev) => onChange(value), true);\r\n    resolve();\r\n  });\r\n};\r\n\r\nexport const dbUnsubscribe = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).off();\r\n    resolve();\r\n  });\r\n};\r\n","export const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomCampaignKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n\r\nexport const cursorPositionPx2Pct = (x, y, viewport) => {\r\n  return {\r\n    x: (x * 100) / viewport.width,\r\n    y: (y * 100) / viewport.height,\r\n  };\r\n};\r\n\r\nexport const cursorXPctToPx = (x, viewport) => {\r\n  return (x * viewport.width) / 100;\r\n};\r\n\r\nexport const cursorYPctToPx = (y, viewport) => {\r\n  return (y * viewport.height) / 100;\r\n};\r\n","import {\r\n  dbPut,\r\n  dbDelete,\r\n  dbRead,\r\n  dbSubscribe,\r\n  dbUnsubscribe,\r\n} from \"./database\";\r\nimport { getRandomCampaignKey } from \"./utility\";\r\nimport { appVersion, CLIENT_SCENES } from \"./constants\";\r\n\r\n// const campaign = {\r\n//   key: \"\", // chiave della campagna \"AAAA\"\r\n//   appVersion: \"\", // versione app che ha creato la campagna \"0.0.4\"\r\n//   creatorDeviceId: \"\", // uuid identificativo del device che ha creato la campagna\r\n// };\r\n\r\nexport const createCampaign = async (clientData) => {\r\n  const newGame = {\r\n    key: getRandomCampaignKey(),\r\n    appVersion: appVersion,\r\n    creatorDeviceId: clientData.deviceId,\r\n  };\r\n\r\n  await dbPut(newGame.key, newGame);\r\n\r\n  return newGame;\r\n};\r\n\r\nconst deleteCampaign = async (key) => {\r\n  await dbPut(key, { deleted: true });\r\n};\r\n\r\nconst downloadCampaign = async (key) => {\r\n  return await dbRead(key);\r\n};\r\n\r\nconst subscribeCampaign = async (key, onChange) => {\r\n  await dbSubscribe(key, onChange);\r\n};\r\n\r\nconst updateCampaign = async (key, campaignData) => {\r\n  await dbPut(key, campaignData);\r\n};\r\n\r\nconst existCampaign = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return !!campaign?.key;\r\n};\r\n\r\nconst isMyCampaign = async (key) => {\r\n  if (!clientData?.deviceId) return false;\r\n  const campaign = await dbRead(key);\r\n  return campaign?.creatorDeviceId === clientData.deviceId;\r\n};\r\n\r\nconst campaignIsSameVersion = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return campaign?.appVersion === appVersion;\r\n};\r\n\r\n/* Complex game ops */\r\n\r\nexport const joinCampaign = async ({ key, clientData, onCampaignChange }) => {\r\n  if (!key || key.length !== 4) {\r\n    return \"The campaign key is not valid\";\r\n  }\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (!campaign || !campaign.key) {\r\n    return \"The campaign does not exist\";\r\n  }\r\n\r\n  if (campaign.appVersion !== appVersion) {\r\n    return \"The campaign has a different version\";\r\n  }\r\n\r\n  updateMyPlayer(clientData);\r\n\r\n  onCampaignChange(campaign);\r\n\r\n  await dbSubscribe(key, onCampaignChange);\r\n\r\n  return null;\r\n};\r\n\r\nexport const leaveCampaign = async (key, deviceId, playerId) => {\r\n  await dbUnsubscribe(key);\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (campaign?.creatorDeviceId === deviceId) {\r\n    await deleteCampaign(key);\r\n  } else {\r\n    await resetMyPlayer(key, playerId);\r\n  }\r\n};\r\n\r\n/* Gestione player */\r\n\r\nexport const updateMyPlayer = (clientData) => {\r\n  if (!clientData.playerId || !clientData.campaignKey) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[clientData.playerId + \"_deviceId\"] = clientData.deviceId;\r\n  myPlayerData[clientData.playerId + \"_userName\"] = clientData.userName;\r\n  myPlayerData[clientData.playerId + \"_clientScene\"] = clientData.clientScene;\r\n\r\n  if (clientData.clientScene === CLIENT_SCENES.CHARACTER_SELECTION) {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = clientData.cursor.x;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = clientData.cursor.y;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = clientData.cursor.hide;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = clientData.cursor.text;\r\n  } else {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = true;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = null;\r\n  }\r\n\r\n  updateCampaign(clientData.campaignKey, myPlayerData);\r\n};\r\n\r\nexport const resetMyPlayer = (key, playerId) => {\r\n  if (!playerId || !key) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[playerId + \"_deviceId\"] = null;\r\n  myPlayerData[playerId + \"_userName\"] = null;\r\n  myPlayerData[playerId + \"_clientScene\"] = null;\r\n  myPlayerData[playerId + \"_cursorX\"] = null;\r\n  myPlayerData[playerId + \"_cursorY\"] = null;\r\n  myPlayerData[playerId + \"_cursorHide\"] = null;\r\n  myPlayerData[playerId + \"_cursorText\"] = null;\r\n\r\n  updateCampaign(key, myPlayerData);\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES, appVersion } from \"../../logic/constants\";\r\nimport {\r\n  createCampaign,\r\n  joinCampaign,\r\n  leaveCampaign,\r\n} from \"../../logic/campaign\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({\r\n  clientData,\r\n  changeUserName,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  softResetClientData,\r\n\r\n  mergeGameData,\r\n\r\n  addToastMessage,\r\n}) => {\r\n  const [name, setName] = useState(clientData.userName);\r\n\r\n  const onCreateCampaign = useCallback(async () => {\r\n    changeUserName(name);\r\n\r\n    const newGame = await createCampaign(clientData);\r\n\r\n    await joinCampaign({\r\n      key: newGame.key,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    changeCampaignKey(newGame.key);\r\n\r\n    changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    addToastMessage,\r\n    mergeGameData,\r\n    changeCampaignKey,\r\n    changeClientScene,\r\n  ]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.JOIN_LOBBY_PREGAME);\r\n  }, [changeUserName, name, changeClientScene]);\r\n\r\n  const onContinueCampaign = useCallback(async () => {\r\n    changeUserName(name);\r\n\r\n    const error = await joinCampaign({\r\n      key: clientData.campaignKey,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    if (!error) {\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(error);\r\n    }\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const onLeaveCampaign = useCallback(async () => {\r\n    await leaveCampaign(\r\n      clientData.campaignKey,\r\n      clientData.deviceId,\r\n      clientData.playerId\r\n    );\r\n\r\n    softResetClientData();\r\n  }, [\r\n    clientData.campaignKey,\r\n    clientData.deviceId,\r\n    clientData.playerId,\r\n    softResetClientData,\r\n  ]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput label=\"Name\" value={name} setValue={setName} />\r\n      {clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text={\"Continue campaign \" + clientData.campaignKey}\r\n            icon=\"navigate_next\"\r\n            onClick={onContinueCampaign}\r\n          />\r\n          <Button\r\n            text={\"Leave campaign \" + clientData.campaignKey}\r\n            icon=\"logout\"\r\n            onClick={onLeaveCampaign}\r\n          />\r\n        </>\r\n      )}\r\n      {!clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text=\"Create campaign\"\r\n            icon=\"add\"\r\n            onClick={onCreateCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n          <Button\r\n            text=\"Join campaign\"\r\n            icon=\"login\"\r\n            onClick={onJoinCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n        </>\r\n      )}\r\n      <span className=\"version\">{appVersion}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  softResetClientData: PropTypes.func.isRequired,\r\n\r\n  mergeGameData: PropTypes.func.isRequired,\r\n\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst PlayerSlot = ({ color, userName, itsAMe, onSelectPlayer }) => {\r\n  const customClass = useMemo(\r\n    () =>\r\n      [\"player\", color, userName ? null : \"locked\"]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [color, userName]\r\n  );\r\n\r\n  const spanText = useMemo(() => {\r\n    if (!userName) return \"Player \" + color + \" (bot)\";\r\n    if (itsAMe) return userName + \" (you)\";\r\n    return userName;\r\n  }, [userName, color, itsAMe]);\r\n\r\n  return (\r\n    <div className={customClass} onClick={onSelectPlayer}>\r\n      {userName ? (\r\n        <span className=\"icon material-icons-round\">face</span>\r\n      ) : (\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n      )}\r\n      <span>{spanText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayerSlot.propTypes = {\r\n  color: PropTypes.oneOf([\"blue\", \"red\", \"green\", \"yellow\"]).isRequired,\r\n  userName: PropTypes.string,\r\n  itsAMe: PropTypes.bool.isRequired,\r\n  onSelectPlayer: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayerSlot.defaultProps = {\r\n  userName: null,\r\n};\r\n\r\nexport default PlayerSlot;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport PlayerSlot from \"./PlayerSlot\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { resetMyPlayer } from \"../../logic/campaign\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({\r\n  clientData,\r\n  gameData,\r\n  changePlayerId,\r\n  changeClientScene,\r\n  addToastMessage,\r\n}) => {\r\n  const onSelectPlayerSlot = useCallback(\r\n    async (newPlayerId) => {\r\n      // Se non è già occupato\r\n      if (gameData[newPlayerId + \"_deviceId\"])\r\n        return addToastMessage(\"error\", \"Already taken\");\r\n      // Libero il posto\r\n      await resetMyPlayer(clientData.campaignKey, clientData.playerId);\r\n      // Occupo il nuovo\r\n      changePlayerId(newPlayerId);\r\n    },\r\n    [\r\n      gameData,\r\n      addToastMessage,\r\n      clientData.campaignKey,\r\n      clientData.playerId,\r\n      changePlayerId,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.campaignKey}</span>\r\n      </div>\r\n      <PlayerSlot\r\n        color=\"blue\"\r\n        userName={gameData?.playerBlue_userName}\r\n        itsAMe={gameData?.playerBlue_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerBlue\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"red\"\r\n        userName={gameData?.playerRed_userName}\r\n        itsAMe={gameData?.playerRed_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerRed\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"green\"\r\n        userName={gameData?.playerGreen_userName}\r\n        itsAMe={gameData?.playerGreen_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerGreen\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"yellow\"\r\n        userName={gameData?.playerYellow_userName}\r\n        itsAMe={gameData?.playerYellow_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerYellow\")}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      />\r\n      <Button\r\n        text=\"Start\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.CHARACTER_SELECTION)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {\r\n  gameData: null,\r\n};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { joinCampaign } from \"../../logic/campaign\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({\r\n  clientData,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  mergeGameData,\r\n  addToastMessage,\r\n}) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(async () => {\r\n    const error = await joinCampaign({\r\n      key: lobbyCode,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    if (!error) {\r\n      changeCampaignKey(lobbyCode);\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(\"error\", error);\r\n    }\r\n  }, [\r\n    lobbyCode,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    if (value?.length > 4) return;\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n        onKeyPressEnter={onJoinCampaign}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./characterSelection.css\";\r\n\r\nconst CharacterSelection = ({ changeClientScene }) => {\r\n  return (\r\n    <div id=\"character_selection\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.LOBBY_PREGAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterSelection.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nCharacterSelection.defaultProps = {};\r\n\r\nexport default CharacterSelection;\r\n","import CharacterSelection from './CharacterSelection';\r\n\r\nexport default CharacterSelection;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  cursorPositionPx2Pct,\r\n  cursorXPctToPx,\r\n  cursorYPctToPx,\r\n} from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  playerId,\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n  viewport,\r\n}) => {\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event) => {\r\n      const e = event || window.event;\r\n      const { x, y } = cursorPositionPx2Pct(e.x, e.y, viewport);\r\n      changeCursorX(x);\r\n      changeCursorY(y);\r\n    },\r\n    [changeCursorX, changeCursorY, viewport]\r\n  );\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n  }, [changeCursorHide]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n  }, [changeCursorUp, changeCursorHide]);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n  }, [changeCursorUp, changeCursorDown]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n  }, [changeCursorDown, changeCursorUp]);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  }, [\r\n    handleMouseMove,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleMouseDown,\r\n    handleMouseUp,\r\n    handleContextMenu,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(cursorData.x, viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(cursorData.y, viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  playerId: PropTypes.string,\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {\r\n  playerId: null,\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { cursorXPctToPx, cursorYPctToPx } from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst CursorGhost = ({ playerId, gameData, viewport }) => {\r\n  if (!gameData || !gameData[playerId + \"_userName\"]) return null;\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        gameData[playerId + \"_cursorHide\"] ? \"hidden\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, gameData[playerId + \"_cursorHide\"]]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(gameData[playerId + \"_cursorX\"], viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(gameData[playerId + \"_cursorY\"], viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{gameData[playerId + \"_cursorText\"]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursorGhost.propTypes = {\r\n  playerId: PropTypes.string,\r\n  gameData: PropTypes.object,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursorGhost.defaultProps = {\r\n  playerId: null,\r\n  gameData: null,\r\n};\r\n\r\nexport default CursorGhost;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./toastMessage.css\";\r\n\r\nconst ToastMessageContainer = ({ messages }) => {\r\n  return (\r\n    <div id=\"toast_message_container\">\r\n      {messages?.map((message, i) => (\r\n        <div key={i} className={\"toast-message \" + message.type}>\r\n          {message.type === \"error\" && (\r\n            <span className=\"icon material-icons-round\">priority_high</span>\r\n          )}\r\n          <span className=\"text\">{message.text}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nToastMessageContainer.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n};\r\n\r\nToastMessageContainer.defaultProps = {};\r\n\r\nexport default ToastMessageContainer;\r\n","import ToastMessageContainer from \"./ToastMessageContainer\";\r\n\r\nexport default ToastMessageContainer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport Background from \"./scenes/background\";\r\nimport Menu from \"./scenes/menu\";\r\nimport Pregame from \"./scenes/pregame\";\r\nimport JoinPregame from \"./scenes/joinPregame\";\r\nimport CharacterSelection from \"./scenes/characterSelection\";\r\n\r\nimport { Cursor, CursorGhost } from \"./components/cursor\";\r\nimport ToastMessageContainer from \"./components/toastMessage\";\r\n\r\nimport { appVersion, CLIENT_SCENES, LSKEY } from \"./logic/constants\";\r\nimport { updateMyPlayer, leaveCampaign } from \"./logic/campaign\";\r\nimport { uuidv4 } from \"./logic/utility\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // TOAST MESSAGES ##########################################\r\n\r\n  const [toastMessages, setToastMessages] = useState([]);\r\n\r\n  const deleteToastMessage = useCallback((id) => {\r\n    setToastMessages((prev) =>\r\n      prev.filter((toastMessage) => toastMessage.id !== id)\r\n    );\r\n  }, []);\r\n\r\n  const addToastMessage = useCallback(\r\n    (type, text) => {\r\n      let id = uuidv4();\r\n\r\n      setToastMessages((prev) => [...prev, { id, type, text }]);\r\n\r\n      setTimeout(() => deleteToastMessage(id), 3000);\r\n    },\r\n    [deleteToastMessage]\r\n  );\r\n\r\n  // CLIENT DATA ##########################################\r\n\r\n  const [clientData, setClientData] = useState(() => {\r\n    const lsValue = JSON.parse(localStorage.getItem(LSKEY.CLIENT_DATA));\r\n\r\n    // Se ho i dati e la versione è uguale uso quelli pulendo solo la scene corrente\r\n    if (lsValue?.appVersion === appVersion) {\r\n      return { ...lsValue, clientScene: CLIENT_SCENES.MENU };\r\n    }\r\n\r\n    const defaultValues = {\r\n      appVersion: appVersion,\r\n      deviceId: uuidv4(),\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      userName: \"\",\r\n      campaignKey: null,\r\n      playerId: null,\r\n      cursor: {\r\n        x: 0,\r\n        y: 0,\r\n        mouseUp: false,\r\n        mouseDown: false,\r\n        hide: true,\r\n        text: \"\",\r\n      },\r\n    };\r\n\r\n    // Se ho i dati, la versione è diversa e ho il vecchio device id pulisco tutto mantenendo quello e lo user name\r\n    if (lsValue && lsValue.appVersion !== appVersion && !!lsValue.deviceId) {\r\n      return {\r\n        ...defaultValues,\r\n        deviceId: lsValue.deviceId,\r\n        userName: lsValue.userName,\r\n      };\r\n    }\r\n\r\n    return defaultValues;\r\n  });\r\n\r\n  useEffect(() => {\r\n    updateMyPlayer(clientData);\r\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(clientData));\r\n  }, [clientData]);\r\n\r\n  const softResetClientData = useCallback(() => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      campaignKey: null,\r\n      playerId: null,\r\n    }));\r\n  }, []);\r\n\r\n  const changeClientScene = useCallback((newScene) => {\r\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\r\n  }, []);\r\n\r\n  const changeUserName = useCallback((newUserName) => {\r\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\r\n  }, []);\r\n\r\n  const changeCampaignKey = useCallback((newCampaignKey) => {\r\n    setClientData((prev) => ({ ...prev, campaignKey: newCampaignKey }));\r\n  }, []);\r\n\r\n  const changePlayerId = useCallback((newPlayerId) => {\r\n    setClientData((prev) => ({ ...prev, playerId: newPlayerId }));\r\n  }, []);\r\n\r\n  // CLIENT DATA CURSOR ##########################################\r\n\r\n  const changeCursorX = useCallback((newValue) => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      cursor: { ...prev.cursor, x: newValue, hide: false },\r\n    }));\r\n  }, []);\r\n  const changeCursorY = useCallback((newValue) => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      cursor: { ...prev.cursor, y: newValue, hide: false },\r\n    }));\r\n  }, []);\r\n  const changeCursorUp = useCallback((newValue) => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      cursor: { ...prev.cursor, mouseUp: newValue },\r\n    }));\r\n  }, []);\r\n  const changeCursorDown = useCallback((newValue) => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      cursor: { ...prev.cursor, mouseDown: newValue },\r\n    }));\r\n  }, []);\r\n  const changeCursorHide = useCallback((newValue) => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      cursor: { ...prev.cursor, hide: newValue },\r\n    }));\r\n  }, []);\r\n\r\n  // GAME DATA ##########################################\r\n\r\n  const [gameData, setGameData] = useState(null);\r\n\r\n  const leaveCampaignApp = useCallback(() => {\r\n    leaveCampaign(\r\n      clientData.campaignKey,\r\n      clientData.deviceId,\r\n      clientData.playerId\r\n    );\r\n    softResetClientData();\r\n    setGameData(null);\r\n  }, [\r\n    clientData.campaignKey,\r\n    clientData.deviceId,\r\n    clientData.playerId,\r\n    softResetClientData,\r\n  ]);\r\n\r\n  const mergeGameData = useCallback(\r\n    (newValue) => {\r\n      if (newValue?.deleted === true) {\r\n        leaveCampaignApp();\r\n        return;\r\n      }\r\n      setGameData((prev) => ({\r\n        ...prev,\r\n        ...newValue,\r\n      }));\r\n    },\r\n    [leaveCampaignApp]\r\n  );\r\n\r\n  // VIEWPORT ##########################################\r\n\r\n  const [viewport, setViewport] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  const handleResize = useCallback(\r\n    () => setViewport({ height: window.innerHeight, width: window.innerWidth }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [handleResize]);\r\n\r\n  // EFFETTI ##########################################\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"gameData changed: \", { ...gameData });\r\n  // }, [gameData]);\r\n\r\n  return (\r\n    <>\r\n      <Background />\r\n      {CLIENT_SCENES.MENU === clientData.clientScene && (\r\n        <Menu\r\n          clientData={clientData}\r\n          changeUserName={changeUserName}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          softResetClientData={softResetClientData}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.LOBBY_PREGAME === clientData.clientScene && (\r\n        <Pregame\r\n          clientData={clientData}\r\n          gameData={gameData}\r\n          changePlayerId={changePlayerId}\r\n          changeClientScene={changeClientScene}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\r\n        <JoinPregame\r\n          clientData={clientData}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene && (\r\n        <CharacterSelection changeClientScene={changeClientScene} />\r\n      )}\r\n\r\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\r\n        clientData.playerId !== \"playerBlue\" && (\r\n          <CursorGhost\r\n            playerId=\"playerBlue\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\r\n        clientData.playerId !== \"playerRed\" && (\r\n          <CursorGhost\r\n            playerId=\"playerRed\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\r\n        clientData.playerId !== \"playerGreen\" && (\r\n          <CursorGhost\r\n            playerId=\"playerGreen\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\r\n        clientData.playerId !== \"playerYellow\" && (\r\n          <CursorGhost\r\n            playerId=\"playerYellow\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n\r\n      <ToastMessageContainer messages={toastMessages} />\r\n\r\n      {clientData.cursor && (\r\n        <Cursor\r\n          playerId={clientData.playerId}\r\n          cursorData={clientData.cursor}\r\n          changeCursorX={changeCursorX}\r\n          changeCursorY={changeCursorY}\r\n          changeCursorUp={changeCursorUp}\r\n          changeCursorDown={changeCursorDown}\r\n          changeCursorHide={changeCursorHide}\r\n          viewport={viewport}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}