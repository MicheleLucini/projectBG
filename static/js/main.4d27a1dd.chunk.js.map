{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","logic/database.js","logic/utility.js","logic/campaign.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/PlayerSlot.jsx","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","components/cardBackFace/CardBackFace.jsx","components/cardBackFace/index.js","components/deck/Deck.jsx","components/deck/index.js","components/suit/Suit.jsx","components/suit/index.js","components/card/Card.jsx","components/card/index.js","components/hand/Hand.jsx","components/hand/index.js","scenes/game/Game.jsx","scenes/game/index.js","components/cursor/Cursor.jsx","components/cursor/CursorGhost.jsx","components/toastMessage/ToastMessageContainer.jsx","components/toastMessage/index.js","logic/storage.js","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","onKeyPressEnter","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","onKeyPress","window","event","key","required","appVersion","version","CLIENT_SCENES","LSKEY","PLAYER_IDS","blue","red","green","yellow","CARD_SUIT_COLOR","BLACK","RED","CARD_SUIT","SPADE","HEART","DIAMOND","CLUB","JOKER","CARD_RANK","ACE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","JACK","QUEEN","KING","G","Gun","dbLog","message","params","dbPut","dbObjId","data","Promise","get","put","ack","dbRead","once","requestedData","dbSubscribe","on","_msg","_ev","dbUnsubscribe","off","uuidv4","replace","c","r","Math","random","toString","getRandomCampaignKey","result","characters","i","push","charAt","floor","length","join","cursorXPctToPx","x","viewport","width","cursorYPctToPx","y","height","getNewShuffledDeck","deck","cardId","Object","values","forEach","deckColor","rank","suit","color","getColorFromSuit","console","log","array","randomIndex","currentIndex","shuffle","getColorFromPlayerId","playerId","createCampaign","clientData","a","newGame","creatorDeviceId","deviceId","deleteCampaign","deleted","updateCampaign","campaignData","joinCampaign","onCampaignChange","campaign","updateMyPlayer","leaveCampaign","resetMyPlayer","clientCursor","campaignKey","myPlayerData","userName","clientScene","hide","shuffleDeck","gameData","updates","shift","updatesStringified","entries","JSON","stringify","Menu","changeUserName","changeCampaignKey","changeClientScene","leaveCampaignApp","mergeGameData","addToastMessage","loading","setLoading","name","setName","onCreateCampaign","onJoinCampaign","onContinueCampaign","error","onLeaveCampaign","PlayerSlot","itsAMe","onSelectPlayer","customClass","useMemo","filter","spanText","Pregame","changePlayerId","onSelectPlayerSlot","newPlayerId","playerBlue_userName","playerBlue_deviceId","playerRed_userName","playerRed_deviceId","playerGreen_userName","playerGreen_deviceId","playerYellow_userName","playerYellow_deviceId","JoinPregame","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","CardBackFace","viewBox","fill","xmlns","d","zth","max","prcntg","intero","String","round","padStart","Deck","deckCards","parse","deckLengthPercentage","firsPickDeckColor","deckShadow","style","boxShadow","Suit","Card","card","isFlipped","isAJolly","isAFigure","cardColorSuit","cardRankInfo","getInfoFromCardRank","cardSuit","cardClass","getHandPositionBasedOnPlayer","clientPlayerId","arr","offset","indexOf","Hand","isMyHand","handCards","cards","sort","b","handClass","playerName","map","Game","useEffect","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorColor","cursorClass","mouseDown","mouseUp","handleMouseMove","cursorPositionPx2Pct","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","transform","CursorGhost","ToastMessageContainer","messages","lsGet","localStorage","getItem","alsSet","setItem","lsSet","App","toastMessages","setToastMessages","deleteToastMessage","prev","toastMessage","setTimeout","lsValue","defaultValues","setClientData","softResetClientData","newScene","newUserName","newCampaignKey","setClientCursor","newValue","setGameData","innerHeight","innerWidth","setViewport","handleResize","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d27a1dd.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 30;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ id, text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      id={id}\r\n      className={\r\n        \"simple-button\" +\r\n        (disabled ? \" disabled\" : \"\") +\r\n        (!text ? \" icon-only\" : \"\")\r\n      }\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  id: PropTypes.string,\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  id: \"\",\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  placeholder,\r\n  disabled,\r\n  onKeyPressEnter,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n  const onKeyPress = useCallback((e) => {\r\n    if (!e) e = window.event;\r\n    var keyCode = e.code || e.key;\r\n    if (keyCode === \"Enter\" && onKeyPressEnter) {\r\n      onKeyPressEnter();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")+ (disabled ? \" disabled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n        onKeyPress={onKeyPress}\r\n        disabled={disabled ? \"disabled\" : false}\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  onKeyPressEnter: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n  disabled: false,\r\n  onKeyPressEnter: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","import packageJson from \"../../package.json\";\r\n\r\nexport const appVersion = packageJson.version;\r\n\r\nexport const CLIENT_SCENES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  GAME: \"game\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"client_data\",\r\n};\r\n\r\nexport const PLAYER_IDS = {\r\n  blue: \"playerBlue\",\r\n  red: \"playerRed\",\r\n  green: \"playerGreen\",\r\n  yellow: \"playerYellow\",\r\n};\r\n\r\nexport const CARD_SUIT_COLOR = {\r\n  BLACK: 1,\r\n  RED: 2,\r\n};\r\n\r\nexport const CARD_SUIT = {\r\n  SPADE: 1,\r\n  HEART: 2,\r\n  DIAMOND: 3,\r\n  CLUB: 4,\r\n  JOKER: 5,\r\n};\r\n\r\nexport const CARD_RANK = {\r\n  ACE: 1,\r\n  TWO: 3,\r\n  THREE: 4,\r\n  FOUR: 5,\r\n  FIVE: 6,\r\n  SIX: 7,\r\n  SEVEN: 8,\r\n  EIGHT: 9,\r\n  NINE: 10,\r\n  TEN: 11,\r\n  JACK: 12,\r\n  QUEEN: 13,\r\n  KING: 14,\r\n  JOKER: 15,\r\n};\r\n","import Gun from \"gun\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\nconst dbLogActive = false;\r\n\r\nconst dbLog = (message?: any, ...params: any[]) => {\r\n  if (dbLogActive) console.log(message, ...params);\r\n};\r\n\r\nexport const dbPut = (dbObjId, data) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(data, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" stored: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbDelete = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(null, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" deleted: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbRead = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).once((requestedData) => {\r\n      dbLog(\"Data \" + dbObjId + \" read: \", requestedData);\r\n      resolve(requestedData);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbSubscribe = (dbObjId, onChange) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).on((value, key, _msg, _ev) => onChange(value), true);\r\n    resolve();\r\n  });\r\n};\r\n\r\nexport const dbUnsubscribe = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).off();\r\n    resolve();\r\n  });\r\n};\r\n","import { CARD_RANK, CARD_SUIT, CARD_SUIT_COLOR, PLAYER_IDS } from \"./constants\";\r\n\r\nexport const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomCampaignKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n\r\nexport const cursorPositionPx2Pct = (x, y, viewport) => {\r\n  return {\r\n    x: (x * 100) / viewport.width,\r\n    y: (y * 100) / viewport.height,\r\n  };\r\n};\r\n\r\nexport const cursorXPctToPx = (x, viewport) => {\r\n  return (x * viewport.width) / 100;\r\n};\r\n\r\nexport const cursorYPctToPx = (y, viewport) => {\r\n  return (y * viewport.height) / 100;\r\n};\r\n\r\nexport const getNewShuffledDeck = () => {\r\n  const deck = [];\r\n\r\n  var cardId = 0;\r\n\r\n  Object.values(CARD_SUIT_COLOR).forEach((deckColor) => {\r\n    deck.push(\r\n      {\r\n        rank: CARD_RANK.JOKER,\r\n        suit: CARD_SUIT.JOKER,\r\n        deckColor,\r\n      },\r\n      {\r\n        rank: CARD_RANK.JOKER,\r\n        suit: CARD_SUIT.JOKER,\r\n        deckColor,\r\n      }\r\n    );\r\n    Object.values(CARD_SUIT).forEach((suit) => {\r\n      if (suit === CARD_SUIT.JOKER) return;\r\n      Object.values(CARD_RANK).forEach((rank) => {\r\n        if (rank === CARD_RANK.JOKER) return;\r\n        cardId++;\r\n        deck.push({\r\n          id: cardId,\r\n          suit,\r\n          rank,\r\n          color: getColorFromSuit(suit),\r\n          deckColor,\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  console.log(deck);\r\n\r\n  return shuffle(deck);\r\n};\r\n\r\nexport function getColorFromSuit(suit) {\r\n  if (suit === CARD_SUIT.DIAMOND || suit === CARD_SUIT.HEART)\r\n    return CARD_SUIT_COLOR.RED;\r\n  return CARD_SUIT_COLOR.BLACK;\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex != 0) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport function getColorFromPlayerId(playerId) {\r\n  switch (playerId) {\r\n    case PLAYER_IDS.blue:\r\n      return \"blue\";\r\n    case PLAYER_IDS.red:\r\n      return \"red\";\r\n    case PLAYER_IDS.green:\r\n      return \"green\";\r\n    case PLAYER_IDS.yellow:\r\n      return \"yellow\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport function getInfoFromCardRank(rank) {\r\n  switch (rank) {\r\n    case CARD_RANK.KING:\r\n      return \"K\";\r\n    case CARD_RANK.QUEEN:\r\n      return \"Q\";\r\n    case CARD_RANK.JACK:\r\n      return \"J\";\r\n    case CARD_RANK.TEN:\r\n      return \"10\";\r\n    case CARD_RANK.NINE:\r\n      return \"9\";\r\n    case CARD_RANK.EIGHT:\r\n      return \"8\";\r\n    case CARD_RANK.SEVEN:\r\n      return \"7\";\r\n    case CARD_RANK.SIX:\r\n      return \"6\";\r\n    case CARD_RANK.FIVE:\r\n      return \"5\";\r\n    case CARD_RANK.FOUR:\r\n      return \"4\";\r\n    case CARD_RANK.THREE:\r\n      return \"3\";\r\n    case CARD_RANK.TWO:\r\n      return \"2\";\r\n    case CARD_RANK.ACE:\r\n      return \"A\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","import {\r\n  dbPut,\r\n  dbDelete,\r\n  dbRead,\r\n  dbSubscribe,\r\n  dbUnsubscribe,\r\n} from \"./database\";\r\nimport { getRandomCampaignKey, getNewShuffledDeck } from \"./utility\";\r\nimport { appVersion, CLIENT_SCENES, PLAYER_IDS } from \"./constants\";\r\n\r\n// const campaign = {\r\n//   key: \"\", // chiave della campagna \"AAAA\"\r\n//   appVersion: \"\", // versione app che ha creato la campagna \"0.0.4\"\r\n//   creatorDeviceId: \"\", // uuid identificativo del device che ha creato la campagna\r\n// };\r\n\r\nexport const createCampaign = async (clientData) => {\r\n  const newGame = {\r\n    key: getRandomCampaignKey(),\r\n    appVersion: appVersion,\r\n    creatorDeviceId: clientData.deviceId,\r\n  };\r\n\r\n  await dbPut(newGame.key, newGame);\r\n\r\n  return newGame;\r\n};\r\n\r\nconst deleteCampaign = async (key) => {\r\n  await dbPut(key, { deleted: true });\r\n};\r\n\r\nconst downloadCampaign = async (key) => {\r\n  return await dbRead(key);\r\n};\r\n\r\nconst subscribeCampaign = async (key, onChange) => {\r\n  await dbSubscribe(key, onChange);\r\n};\r\n\r\nconst updateCampaign = async (key, campaignData) => {\r\n  await dbPut(key, campaignData);\r\n};\r\n\r\nconst existCampaign = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return !!campaign?.key;\r\n};\r\n\r\nconst isMyCampaign = async (key) => {\r\n  if (!clientData?.deviceId) return false;\r\n  const campaign = await dbRead(key);\r\n  return campaign?.creatorDeviceId === clientData.deviceId;\r\n};\r\n\r\nconst campaignIsSameVersion = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return campaign?.appVersion === appVersion;\r\n};\r\n\r\n/* Complex game ops */\r\n\r\nexport const joinCampaign = async ({ key, clientData, onCampaignChange }) => {\r\n  if (!key || key.length !== 4) {\r\n    return \"The campaign key is not valid\";\r\n  }\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (!campaign || !campaign.key) {\r\n    return \"The campaign does not exist\";\r\n  }\r\n\r\n  if (campaign.appVersion !== appVersion) {\r\n    return \"The campaign has a different version\";\r\n  }\r\n\r\n  updateMyPlayer(clientData);\r\n\r\n  onCampaignChange(campaign);\r\n\r\n  await dbSubscribe(key, onCampaignChange);\r\n\r\n  return null;\r\n};\r\n\r\nexport const leaveCampaign = async (key, deviceId, playerId) => {\r\n  await dbUnsubscribe(key);\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (campaign?.creatorDeviceId === deviceId) {\r\n    await deleteCampaign(key);\r\n  } else {\r\n    await resetMyPlayer(key, playerId);\r\n  }\r\n};\r\n\r\n/* Gestione player */\r\n\r\nexport const updateMyPlayer = (clientData, clientCursor) => {\r\n  if (!clientData.playerId || !clientData.campaignKey) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[clientData.playerId + \"_deviceId\"] = clientData.deviceId;\r\n  myPlayerData[clientData.playerId + \"_userName\"] = clientData.userName;\r\n  myPlayerData[clientData.playerId + \"_clientScene\"] = clientData.clientScene;\r\n\r\n  if (clientCursor && clientData.clientScene === CLIENT_SCENES.GAME) {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = clientCursor.x;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = clientCursor.y;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = clientCursor.hide;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = clientCursor.text;\r\n  } else {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = true;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = null;\r\n  }\r\n\r\n  updateCampaign(clientData.campaignKey, myPlayerData);\r\n};\r\n\r\nexport const resetMyPlayer = (key, playerId) => {\r\n  if (!playerId || !key) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[playerId + \"_deviceId\"] = null;\r\n  myPlayerData[playerId + \"_userName\"] = null;\r\n  myPlayerData[playerId + \"_clientScene\"] = null;\r\n  myPlayerData[playerId + \"_cursorX\"] = null;\r\n  myPlayerData[playerId + \"_cursorY\"] = null;\r\n  myPlayerData[playerId + \"_cursorHide\"] = null;\r\n  myPlayerData[playerId + \"_cursorText\"] = null;\r\n\r\n  updateCampaign(key, myPlayerData);\r\n};\r\n\r\n/* Gestione deck */\r\n\r\nexport const updateDeck = async (clientData, deck) => {\r\n  const campaign = await dbRead(key);\r\n\r\n  if (!clientData.campaignKey || campaign?.creatorDeviceId !== deviceId) return;\r\n\r\n  updateCampaign(clientData.campaignKey, { deck });\r\n};\r\n\r\nexport const shuffleDeck = async (clientData, gameData) => {\r\n  if (\r\n    !clientData.campaignKey ||\r\n    gameData?.creatorDeviceId !== clientData.deviceId ||\r\n    gameData?.deck\r\n  )\r\n    return;\r\n\r\n  console.log(\"Deck shuffled!\");\r\n\r\n  const updates = {};\r\n  updates.deck = getNewShuffledDeck();\r\n\r\n  Object.values(PLAYER_IDS).forEach((playerId) => {\r\n    updates[playerId + \"_hand\"] = [];\r\n  });\r\n\r\n  for (var i = 0; i < 13; i++) {\r\n    Object.values(PLAYER_IDS).forEach(async (playerId) => {\r\n      updates[playerId + \"_hand\"].push(updates.deck.shift());\r\n    });\r\n  }\r\n\r\n  const updatesStringified = {};\r\n  for (const [key, value] of Object.entries(updates)) {\r\n    updatesStringified[key] = JSON.stringify(value);\r\n  }\r\n\r\n  updateCampaign(clientData.campaignKey, updatesStringified);\r\n};\r\n\r\n// export const drawCard = async (clientData, gameData, playerId) => {\r\n//   console.log(gameData?.deck);\r\n//   if (\r\n//     !clientData.campaignKey ||\r\n//     gameData?.creatorDeviceId !== clientData.deviceId ||\r\n//     !gameData?.deck\r\n//   )\r\n//     return;\r\n\r\n//   const deck = JSON.parse(gameData.deck);\r\n//   const card = deck.shift();\r\n//   const playerHand = JSON.parse(gameData[playerId + \"_hand\"]);\r\n//   playerHand.push(card);\r\n\r\n//   const updates = {};\r\n//   updates.deck = JSON.stringify(deck);\r\n//   updates[playerId + \"_hand\"] = JSON.stringify(playerHand);\r\n\r\n//   console.log(updates);\r\n\r\n//   await updateCampaign(clientData.campaignKey, updates);\r\n// };\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES, appVersion } from \"../../logic/constants\";\r\nimport { createCampaign, joinCampaign } from \"../../logic/campaign\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({\r\n  clientData,\r\n  changeUserName,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  leaveCampaignApp,\r\n  mergeGameData,\r\n  addToastMessage,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(clientData.userName);\r\n\r\n  const onCreateCampaign = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    changeUserName(name);\r\n\r\n    const newGame = await createCampaign(clientData);\r\n\r\n    await joinCampaign({\r\n      key: newGame.key,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    changeCampaignKey(newGame.key);\r\n\r\n    setLoading(false);\r\n\r\n    changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    addToastMessage,\r\n    mergeGameData,\r\n    changeCampaignKey,\r\n    changeClientScene,\r\n  ]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.JOIN_LOBBY_PREGAME);\r\n  }, [changeUserName, name, changeClientScene]);\r\n\r\n  const onContinueCampaign = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    changeUserName(name);\r\n\r\n    const error = await joinCampaign({\r\n      key: clientData.campaignKey,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    setLoading(false);\r\n\r\n    if (!error) {\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(error);\r\n    }\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const onLeaveCampaign = useCallback(() => {\r\n    leaveCampaignApp();\r\n  }, [leaveCampaignApp]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput\r\n        label=\"Username\"\r\n        value={name}\r\n        setValue={setName}\r\n        disabled={loading}\r\n      />\r\n      {clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text={\"Continue campaign \" + clientData.campaignKey}\r\n            icon=\"navigate_next\"\r\n            onClick={onContinueCampaign}\r\n            disabled={loading}\r\n          />\r\n          <Button\r\n            text={\"Leave campaign \" + clientData.campaignKey}\r\n            icon=\"logout\"\r\n            onClick={onLeaveCampaign}\r\n            disabled={loading}\r\n          />\r\n        </>\r\n      )}\r\n      {!clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text=\"Create campaign\"\r\n            icon=\"add\"\r\n            onClick={onCreateCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n          <Button\r\n            text=\"Join campaign\"\r\n            icon=\"login\"\r\n            onClick={onJoinCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n        </>\r\n      )}\r\n      <span className=\"version\">{appVersion}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  leaveCampaignApp: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst PlayerSlot = ({ color, userName, itsAMe, onSelectPlayer }) => {\r\n  const customClass = useMemo(\r\n    () =>\r\n      [\"player\", color, userName ? null : \"locked\"]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [color, userName]\r\n  );\r\n\r\n  const spanText = useMemo(() => {\r\n    if (!userName) return \"Player \" + color + \" (bot)\";\r\n    if (itsAMe) return userName + \" (you)\";\r\n    return userName;\r\n  }, [userName, color, itsAMe]);\r\n\r\n  return (\r\n    <div className={customClass} onClick={onSelectPlayer}>\r\n      {userName ? (\r\n        <span className=\"icon material-icons-round\">face</span>\r\n      ) : (\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n      )}\r\n      <span>{spanText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayerSlot.propTypes = {\r\n  color: PropTypes.oneOf([\"blue\", \"red\", \"green\", \"yellow\"]).isRequired,\r\n  userName: PropTypes.string,\r\n  itsAMe: PropTypes.bool.isRequired,\r\n  onSelectPlayer: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayerSlot.defaultProps = {\r\n  userName: null,\r\n};\r\n\r\nexport default PlayerSlot;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport PlayerSlot from \"./PlayerSlot\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { resetMyPlayer } from \"../../logic/campaign\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({\r\n  clientData,\r\n  gameData,\r\n  changePlayerId,\r\n  changeClientScene,\r\n  addToastMessage,\r\n}) => {\r\n  const onSelectPlayerSlot = useCallback(\r\n    async (newPlayerId) => {\r\n      // Se non è già occupato\r\n      if (gameData[newPlayerId + \"_deviceId\"])\r\n        return addToastMessage(\"error\", \"Already taken\");\r\n      // Libero il posto\r\n      await resetMyPlayer(clientData.campaignKey, clientData.playerId);\r\n      // Occupo il nuovo\r\n      changePlayerId(newPlayerId);\r\n    },\r\n    [\r\n      gameData,\r\n      addToastMessage,\r\n      clientData.campaignKey,\r\n      clientData.playerId,\r\n      changePlayerId,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.campaignKey}</span>\r\n      </div>\r\n      <PlayerSlot\r\n        color=\"blue\"\r\n        userName={gameData?.playerBlue_userName}\r\n        itsAMe={gameData?.playerBlue_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerBlue\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"red\"\r\n        userName={gameData?.playerRed_userName}\r\n        itsAMe={gameData?.playerRed_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerRed\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"green\"\r\n        userName={gameData?.playerGreen_userName}\r\n        itsAMe={gameData?.playerGreen_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerGreen\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"yellow\"\r\n        userName={gameData?.playerYellow_userName}\r\n        itsAMe={gameData?.playerYellow_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerYellow\")}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      />\r\n      <Button\r\n        text=\"Start\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.GAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {\r\n  gameData: null,\r\n};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { joinCampaign } from \"../../logic/campaign\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({\r\n  clientData,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  mergeGameData,\r\n  addToastMessage,\r\n}) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(async () => {\r\n    const error = await joinCampaign({\r\n      key: lobbyCode,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    if (!error) {\r\n      changeCampaignKey(lobbyCode);\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(\"error\", error);\r\n    }\r\n  }, [\r\n    lobbyCode,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    if (value?.length > 4) return;\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n        onKeyPressEnter={onJoinCampaign}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cardBackFace.css\";\r\n\r\nconst CardBackFace = ({ deckColor }) => {\r\n  return (\r\n    <div\r\n      className={\"card_back_face card_back_color_\" + deckColor}\r\n    >\r\n      <div className=\"pattern\">\r\n        <div className=\"logo\">\r\n          <svg\r\n            width=\"813\"\r\n            height=\"337\"\r\n            viewBox=\"0 0 813 337\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0.977607 335.465C-0.722394 333.365 -0.0223934 132.765 1.67761 124.365C5.97761 104.065 7.67761 98.4649 13.2776 85.0649C16.3776 77.6649 25.5776 62.3649 31.3776 54.8649C33.7776 51.8649 39.4776 45.765 44.0776 41.265C65.5776 20.265 84.3776 10.365 118.378 1.76495C126.678 -0.33505 159.778 -0.63505 169.878 1.26495C178.878 3.06495 186.878 5.16495 193.178 7.46495C202.278 10.865 205.678 12.165 209.878 14.165C215.578 16.765 235.778 29.965 238.278 32.765C239.378 33.865 241.078 34.865 242.178 34.865C243.278 34.865 247.978 32.065 252.778 28.565C257.478 25.165 262.778 21.365 264.378 20.265C268.078 17.765 283.478 10.365 286.878 9.36495C288.278 9.06495 290.978 8.16495 292.878 7.46495C296.478 6.06495 303.678 3.96495 312.378 1.76495C320.678 -0.33505 353.778 -0.63505 363.878 1.26495C394.978 7.26495 418.978 19.465 440.678 40.265C454.478 53.465 465.578 69.5649 472.778 86.8649C478.178 99.9649 479.278 103.065 480.878 109.365C484.578 124.965 484.778 130.865 484.878 234.465C484.878 325.865 484.678 335.665 483.278 336.265C481.278 337.065 392.478 337.065 390.478 336.265C389.078 335.665 388.878 326.265 388.878 239.465C388.878 181.065 388.478 140.665 387.878 136.465C385.278 118.865 371.778 103.365 353.878 97.3649C346.878 95.0649 332.178 95.0649 325.578 97.2649C310.178 102.665 299.078 113.565 293.478 128.765C291.378 134.265 291.378 136.465 290.878 235.365L290.378 336.365H242.878H195.378L194.878 235.365C194.378 145.165 194.178 133.865 192.678 129.765C187.878 116.365 179.678 106.865 167.478 100.765C147.478 90.8649 127.178 94.365 111.278 110.265C103.778 117.865 99.9776 124.565 97.9776 133.665C97.1776 137.365 96.8776 167.665 96.8776 236.665C96.8776 311.365 96.5776 334.765 95.6776 335.665C93.7776 337.565 2.57761 337.365 0.977607 335.465Z\"\r\n              fill=\"black\"\r\n            ></path>\r\n            <path\r\n              d=\"M523.178 1.22894C521.678 2.72894 522.378 176.929 523.978 190.129C531.978 256.829 580.978 312.929 647.878 331.829C650.878 332.729 655.378 333.729 657.878 334.129C660.378 334.529 664.878 335.429 667.878 336.029C671.678 336.829 694.578 337.029 742.878 336.929L812.378 336.629L812.678 290.229C812.778 264.629 812.578 243.429 812.078 242.929C811.678 242.529 781.678 242.029 745.378 241.829C671.078 241.529 675.478 241.929 658.378 233.329C641.778 224.929 629.578 210.629 622.078 190.629C619.178 182.829 618.878 173.729 618.878 89.1289C618.878 23.1289 618.578 2.22894 617.678 1.32894C616.078 -0.271062 524.778 -0.371062 523.178 1.22894Z\"\r\n              fill=\"black\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardBackFace.propTypes = {\r\n  deckColor: PropTypes.number.isRequired,\r\n};\r\n\r\nCardBackFace.defaultProps = {};\r\n\r\nexport default CardBackFace;\r\n","import CardBackFace from './CardBackFace';\r\n\r\nexport default CardBackFace;\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CardBackFace from \"../cardBackFace\";\r\n\r\nimport \"./deck.css\";\r\n\r\nfunction zth(max, prcntg, intero) {\r\n  var x = (max * prcntg) / 100;\r\n  if (intero) return String(Math.round(x)).padStart(2, \"0\");\r\n  return Math.round(x * 10) / 10;\r\n}\r\n\r\nconst Deck = ({ gameData }) => {\r\n  const deckCards = useMemo(() => {\r\n    return gameData.deck ? JSON.parse(gameData.deck) : [];\r\n  }, [gameData.deck]);\r\n  const deckLengthPercentage = useMemo(() => {\r\n    return (deckCards?.length * 100) / 108;\r\n  }, [deckCards]);\r\n  const firsPickDeckColor = useMemo(() => {\r\n    return deckCards?.length > 0 ? deckCards[0].deckColor : null;\r\n  }, [deckCards]);\r\n\r\n  const deckShadow = useMemo(() => {\r\n    return (\r\n      \"0 \" + zth(20, deckLengthPercentage) + \"px 0 #ccc,\" +\r\n      \"0 \" + zth(20, deckLengthPercentage) + \"px \" + zth(40, deckLengthPercentage) + \"px rgba(0,0,0,0.\" + zth(19, deckLengthPercentage, true) + \"),\" +\r\n      \"0 \" + zth(22, deckLengthPercentage) + \"px \" + zth(16, deckLengthPercentage) + \"px rgba(0,0,0,0.\" + zth(30, deckLengthPercentage, true) + \")\"\r\n    );\r\n  }, [deckLengthPercentage]);\r\n\r\n  return (\r\n    <div id=\"deck\" style={{ boxShadow: deckShadow }}>\r\n      <CardBackFace deckColor={firsPickDeckColor}></CardBackFace>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeck.propTypes = {\r\n  gameData: PropTypes.object.isRequired,\r\n};\r\n\r\nDeck.defaultProps = {};\r\n\r\nexport default Deck;\r\n","import Deck from './Deck';\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CARD_SUIT } from \"../../logic/constants\";\r\n\r\nimport \"./suit.css\";\r\n\r\nconst Suit = ({ type }) => {\r\n  return (\r\n    <>\r\n      {type === CARD_SUIT.DIAMOND && (\r\n        <div className=\"diamond\">\r\n          <div className=\"square\"></div>\r\n        </div>\r\n      )}\r\n      {type === CARD_SUIT.SPADE && (\r\n        <div className=\"spade\">\r\n          <div className=\"square\"></div>\r\n          <div className=\"circle1\"></div>\r\n          <div className=\"circle2\"></div>\r\n          <div className=\"tail\"></div>\r\n        </div>\r\n      )}\r\n      {type === CARD_SUIT.HEART && (\r\n        <div className=\"heart\">\r\n          <div className=\"square\"></div>\r\n          <div className=\"circle1\"></div>\r\n          <div className=\"circle2\"></div>\r\n        </div>\r\n      )}\r\n      {type === CARD_SUIT.CLUB && (\r\n        <div className=\"club\">\r\n          <div className=\"circle1\"></div>\r\n          <div className=\"circle2\"></div>\r\n          <div className=\"circle3\"></div>\r\n          <div className=\"tail\"></div>\r\n        </div>\r\n      )}\r\n      {type === CARD_SUIT.JOKER && (\r\n        <div className=\"joker\">\r\n          <svg className=\"star\">\r\n            <path d=\"M9.5 14.25l-5.584 2.936 1.066-6.218L.465 6.564l6.243-.907L9.5 0l2.792 5.657 6.243.907-4.517 4.404 1.066 6.218\" />\r\n          </svg>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nSuit.propTypes = {\r\n  type: PropTypes.number.isRequired,\r\n};\r\n\r\nSuit.defaultProps = {};\r\n\r\nexport default Suit;\r\n","import Suit from './Suit';\r\n\r\nexport default Suit;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Suit from \"../suit\";\r\nimport CardBackFace from \"../cardBackFace\";\r\n\r\nimport { getColorFromSuit, getInfoFromCardRank } from \"../../logic/utility\";\r\nimport { CARD_RANK } from \"../../logic/constants\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ card, isFlipped }) => {\r\n  const isAJolly = useMemo(() => card.rank === CARD_RANK.JOKER, [card.rank]);\r\n  const isAFigure = useMemo(\r\n    () => card.rank !== CARD_RANK.JOKER && card.rank > CARD_RANK.TEN,\r\n    [card.rank]\r\n  );\r\n  const cardColorSuit = useMemo(() => getColorFromSuit(card.suit), [card.suit]);\r\n  const cardRankInfo = useMemo(\r\n    () => getInfoFromCardRank(card.rank),\r\n    [card.rank]\r\n  );\r\n  const cardSuit = useMemo(() => <Suit type={card.suit} />, [card.suit]);\r\n\r\n  const cardClass = useMemo(\r\n    () =>\r\n      [\"card\", isFlipped ? \"is-flipped\" : null].filter((x) => !!x).join(\" \"),\r\n    [isFlipped]\r\n  );\r\n\r\n  const onClick = useCallback(() => {}, []);\r\n  return (\r\n    <div id={card.id} key={card.id} className={cardClass} onClick={onClick}>\r\n      {isFlipped && (\r\n        <div className={\"card_front_face card_suit_color_\" + cardColorSuit}>\r\n          <div className={\"info\" + (isAJolly ? \" jolly\" : \"\")}>\r\n            {cardRankInfo}\r\n            {cardSuit}\r\n          </div>\r\n          <div className=\"figure\">{isAFigure && <div></div>}</div>\r\n          <div className={\"info\" + (isAJolly ? \" jolly\" : \"\")}>\r\n            {cardRankInfo}\r\n            {cardSuit}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <CardBackFace deckColor={card.deckColor}></CardBackFace>\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  isFlipped: PropTypes.bool,\r\n};\r\n\r\nCard.defaultProps = {\r\n  isFlipped: false,\r\n};\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nexport default Card;\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getColorFromPlayerId } from \"../../logic/utility\";\r\nimport { PLAYER_IDS } from \"../../logic/constants\";\r\nimport Card from \"../card\";\r\n\r\nimport \"./hand.css\";\r\n\r\nfunction getHandPositionBasedOnPlayer(clientPlayerId, playerId) {\r\n  if (clientPlayerId === playerId) return \"south\";\r\n\r\n  const arr = Object.values(PLAYER_IDS);\r\n  const offset = arr.indexOf(clientPlayerId);\r\n\r\n  for (var i = 0; i < arr.length; i++) {\r\n    var index = (i + offset) % arr.length;\r\n    if (arr[index] !== playerId) continue;\r\n    switch (i) {\r\n      case 1:\r\n        return \"east\";\r\n      case 2:\r\n        return \"north\";\r\n      case 3:\r\n        return \"west\";\r\n    }\r\n  }\r\n}\r\n\r\nconst Hand = ({ playerId, clientData, gameData }) => {\r\n  const isMyHand = useMemo(\r\n    () => playerId === clientData.playerId,\r\n    [playerId, clientData.playerId]\r\n  );\r\n\r\n  const handCards = useMemo(() => {\r\n    const cards = gameData[playerId + \"_hand\"]\r\n      ? JSON.parse(gameData[playerId + \"_hand\"])\r\n      : [];\r\n    cards.sort((a, b) => a.suit - b.suit);\r\n    cards.sort((a, b) => a.rank - b.rank);\r\n    return cards;\r\n  }, [gameData[playerId + \"_hand\"]]);\r\n\r\n  const handClass = useMemo(\r\n    () =>\r\n      [\r\n        \"hand\",\r\n        getColorFromPlayerId(playerId),\r\n        getHandPositionBasedOnPlayer(clientData.playerId, playerId),\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [playerId]\r\n  );\r\n\r\n  const playerName = useMemo(() => {\r\n    if (gameData[playerId + \"_userName\"])\r\n      return gameData[playerId + \"_userName\"];\r\n    return \"Player \" + getColorFromPlayerId(playerId) + \" (bot)\";\r\n  }, [playerId]);\r\n\r\n  return (\r\n    <div className={handClass}>\r\n      <div className=\"wrapper\">\r\n        <span className=\"player-name\">{playerName}</span>\r\n        {handCards?.map((card, i) => (\r\n          <Card key={i} card={card} isFlipped={isMyHand} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHand.propTypes = {\r\n  playerId: PropTypes.string.isRequired,\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object.isRequired,\r\n};\r\n\r\nHand.defaultProps = {};\r\n\r\nexport default Hand;\r\n","import Hand from './Hand';\r\n\r\nexport default Hand;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport Deck from \"../../components/deck\";\r\nimport Hand from \"../../components/hand\";\r\nimport { shuffleDeck } from \"../../logic/campaign\";\r\nimport { PLAYER_IDS } from \"../../logic/constants\";\r\n\r\nimport \"./game.css\";\r\n\r\nconst Game = ({ clientData, gameData, leaveCampaignApp }) => {\r\n  const onLeaveCampaign = useCallback(() => {\r\n    leaveCampaignApp();\r\n  }, [leaveCampaignApp]);\r\n\r\n  useEffect(() => {\r\n    shuffleDeck(clientData, gameData);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"game\">\r\n      <Deck gameData={gameData}></Deck>\r\n      <Hand\r\n        playerId={PLAYER_IDS.blue}\r\n        clientData={clientData}\r\n        gameData={gameData}\r\n      ></Hand>\r\n      <Hand\r\n        playerId={PLAYER_IDS.red}\r\n        clientData={clientData}\r\n        gameData={gameData}\r\n      ></Hand>\r\n      <Hand\r\n        playerId={PLAYER_IDS.green}\r\n        clientData={clientData}\r\n        gameData={gameData}\r\n      ></Hand>\r\n      <Hand\r\n        playerId={PLAYER_IDS.yellow}\r\n        clientData={clientData}\r\n        gameData={gameData}\r\n      ></Hand>\r\n      <Button\r\n        id=\"leave_btn\"\r\n        // text=\"Leave\"\r\n        icon=\"close\"\r\n        onClick={onLeaveCampaign}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object.isRequired,\r\n  leaveCampaignApp: PropTypes.func.isRequired,\r\n};\r\n\r\nGame.defaultProps = {};\r\n\r\nexport default Game;\r\n","import Game from './Game';\r\n\r\nexport default Game;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  cursorPositionPx2Pct,\r\n  cursorXPctToPx,\r\n  cursorYPctToPx,\r\n} from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  playerId,\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n  viewport,\r\n}) => {\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event) => {\r\n      const e = event || window.event;\r\n      const { x, y } = cursorPositionPx2Pct(e.x, e.y, viewport);\r\n      changeCursorX(x);\r\n      changeCursorY(y);\r\n    },\r\n    [changeCursorX, changeCursorY, viewport]\r\n  );\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n  }, [changeCursorHide]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n  }, [changeCursorUp, changeCursorHide]);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n  }, [changeCursorUp, changeCursorDown]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n  }, [changeCursorDown, changeCursorUp]);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  }, [\r\n    handleMouseMove,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleMouseDown,\r\n    handleMouseUp,\r\n    handleContextMenu,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(cursorData.x, viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(cursorData.y, viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  playerId: PropTypes.string,\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {\r\n  playerId: null,\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { cursorXPctToPx, cursorYPctToPx } from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst CursorGhost = ({ playerId, gameData, viewport }) => {\r\n  if (!gameData || !gameData[playerId + \"_userName\"]) return null;\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        gameData[playerId + \"_cursorHide\"] ? \"hidden\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, gameData[playerId + \"_cursorHide\"]]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(gameData[playerId + \"_cursorX\"], viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(gameData[playerId + \"_cursorY\"], viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{gameData[playerId + \"_cursorText\"]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursorGhost.propTypes = {\r\n  playerId: PropTypes.string,\r\n  gameData: PropTypes.object,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursorGhost.defaultProps = {\r\n  playerId: null,\r\n  gameData: null,\r\n};\r\n\r\nexport default CursorGhost;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./toastMessage.css\";\r\n\r\nconst ToastMessageContainer = ({ messages }) => {\r\n  return (\r\n    <div id=\"toast_message_container\">\r\n      {messages?.map((message, i) => (\r\n        <div key={i} className={\"toast-message \" + message.type}>\r\n          {message.type === \"error\" && (\r\n            <span className=\"icon material-icons-round\">priority_high</span>\r\n          )}\r\n          <span className=\"text\">{message.text}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nToastMessageContainer.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n};\r\n\r\nToastMessageContainer.defaultProps = {};\r\n\r\nexport default ToastMessageContainer;\r\n","import ToastMessageContainer from \"./ToastMessageContainer\";\r\n\r\nexport default ToastMessageContainer;\r\n","// Synchronous\r\n\r\nexport const lsSet = (key, value) => {\r\n  return localStorage.setItem(\"pbg_\" + key, JSON.stringify(value));\r\n};\r\n\r\nexport const lsGet = (key, value) => {\r\n  return JSON.parse(localStorage.getItem(\"pbg_\" + key));\r\n};\r\n\r\nexport const lsRemove = (key) => {\r\n  return localStorage.removeItem(\"pbg_\" + key);\r\n};\r\n\r\n// Asynchronous\r\n\r\nexport const alsSet = (key, value) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsSet(key, value));\r\n  });\r\n};\r\n\r\nexport const alsGet = (key, value) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsGet(key));\r\n  });\r\n};\r\n\r\nexport const alsRemove = (key) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsRemove(key));\r\n  });\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport Background from \"./scenes/background\";\r\nimport Menu from \"./scenes/menu\";\r\nimport Pregame from \"./scenes/pregame\";\r\nimport JoinPregame from \"./scenes/joinPregame\";\r\nimport Game from \"./scenes/game\";\r\n\r\nimport { Cursor, CursorGhost } from \"./components/cursor\";\r\nimport ToastMessageContainer from \"./components/toastMessage\";\r\n\r\nimport { appVersion, CLIENT_SCENES, LSKEY } from \"./logic/constants\";\r\nimport { updateMyPlayer, leaveCampaign } from \"./logic/campaign\";\r\nimport { uuidv4 } from \"./logic/utility\";\r\nimport { lsGet, alsSet } from \"./logic/storage\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // TOAST MESSAGES ##########################################\r\n\r\n  const [toastMessages, setToastMessages] = useState([]);\r\n\r\n  const deleteToastMessage = useCallback((id) => {\r\n    setToastMessages((prev) =>\r\n      prev.filter((toastMessage) => toastMessage.id !== id)\r\n    );\r\n  }, []);\r\n\r\n  const addToastMessage = useCallback(\r\n    (type, text) => {\r\n      let id = uuidv4();\r\n\r\n      setToastMessages((prev) => [...prev, { id, type, text }]);\r\n\r\n      setTimeout(() => deleteToastMessage(id), 3000);\r\n    },\r\n    [deleteToastMessage]\r\n  );\r\n\r\n  // CLIENT DATA ##########################################\r\n\r\n  const [clientData, setClientData] = useState(() => {\r\n    const lsValue = lsGet(LSKEY.CLIENT_DATA);\r\n\r\n    // Se ho i dati e la versione è uguale uso quelli pulendo solo la scene corrente\r\n    if (lsValue?.appVersion === appVersion) {\r\n      return { ...lsValue, clientScene: CLIENT_SCENES.MENU };\r\n    }\r\n\r\n    const defaultValues = {\r\n      appVersion: appVersion,\r\n      deviceId: uuidv4(),\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      userName: \"\",\r\n      campaignKey: null,\r\n      playerId: null,\r\n    };\r\n\r\n    // Se ho i dati, la versione è diversa e ho il vecchio device id pulisco tutto mantenendo quello e lo user name\r\n    if (lsValue && lsValue.appVersion !== appVersion && !!lsValue.deviceId) {\r\n      return {\r\n        ...defaultValues,\r\n        deviceId: lsValue.deviceId,\r\n        userName: lsValue.userName,\r\n      };\r\n    }\r\n\r\n    return defaultValues;\r\n  });\r\n\r\n  useEffect(() => {\r\n    alsSet(LSKEY.CLIENT_DATA, clientData);\r\n  }, [clientData]);\r\n\r\n  const softResetClientData = useCallback(() => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      campaignKey: null,\r\n      playerId: null,\r\n    }));\r\n  }, []);\r\n\r\n  const changeClientScene = useCallback((newScene) => {\r\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\r\n  }, []);\r\n\r\n  const changeUserName = useCallback((newUserName) => {\r\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\r\n  }, []);\r\n\r\n  const changeCampaignKey = useCallback((newCampaignKey) => {\r\n    setClientData((prev) => ({ ...prev, campaignKey: newCampaignKey }));\r\n  }, []);\r\n\r\n  const changePlayerId = useCallback((newPlayerId) => {\r\n    setClientData((prev) => ({ ...prev, playerId: newPlayerId }));\r\n  }, []);\r\n\r\n  // CLIENT DATA CURSOR ##########################################\r\n\r\n  const [clientCursor, setClientCursor] = useState({\r\n    x: 0,\r\n    y: 0,\r\n    mouseUp: false,\r\n    mouseDown: false,\r\n    hide: true,\r\n    text: \"\",\r\n  });\r\n\r\n  const changeCursorX = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      x: newValue,\r\n      hide: false,\r\n    }));\r\n  }, []);\r\n  const changeCursorY = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      y: newValue,\r\n      hide: false,\r\n    }));\r\n  }, []);\r\n  const changeCursorUp = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      mouseUp: newValue,\r\n    }));\r\n  }, []);\r\n  const changeCursorDown = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      mouseDown: newValue,\r\n    }));\r\n  }, []);\r\n  const changeCursorHide = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      hide: newValue,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateMyPlayer(clientData, clientCursor);\r\n  }, [clientData, clientCursor]);\r\n\r\n  // GAME DATA ##########################################\r\n\r\n  const [gameData, setGameData] = useState(null);\r\n\r\n  const leaveCampaignApp = useCallback(() => {\r\n    leaveCampaign(\r\n      clientData.campaignKey,\r\n      clientData.deviceId,\r\n      clientData.playerId\r\n    );\r\n    softResetClientData();\r\n    setGameData(null);\r\n  }, [\r\n    clientData.campaignKey,\r\n    clientData.deviceId,\r\n    clientData.playerId,\r\n    softResetClientData,\r\n  ]);\r\n\r\n  const mergeGameData = useCallback(\r\n    (newValue) => {\r\n      if (newValue?.deleted === true) {\r\n        leaveCampaignApp();\r\n        return;\r\n      }\r\n      setGameData((prev) => ({\r\n        ...prev,\r\n        ...newValue,\r\n      }));\r\n    },\r\n    [leaveCampaignApp]\r\n  );\r\n\r\n  // VIEWPORT ##########################################\r\n\r\n  const [viewport, setViewport] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  const handleResize = useCallback(\r\n    () => setViewport({ height: window.innerHeight, width: window.innerWidth }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [handleResize]);\r\n\r\n  // EFFETTI ##########################################\r\n\r\n  useEffect(() => {\r\n    console.log(\"gameData changed: \", { ...gameData });\r\n  }, [gameData]);\r\n\r\n  return (\r\n    <>\r\n      <Background />\r\n      {CLIENT_SCENES.MENU === clientData.clientScene && (\r\n        <Menu\r\n          clientData={clientData}\r\n          changeUserName={changeUserName}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          leaveCampaignApp={leaveCampaignApp}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.LOBBY_PREGAME === clientData.clientScene && (\r\n        <Pregame\r\n          clientData={clientData}\r\n          gameData={gameData}\r\n          changePlayerId={changePlayerId}\r\n          changeClientScene={changeClientScene}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\r\n        <JoinPregame\r\n          clientData={clientData}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene && (\r\n        <Game\r\n          clientData={clientData}\r\n          gameData={gameData}\r\n          leaveCampaignApp={leaveCampaignApp}\r\n        />\r\n      )}\r\n\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerBlue\" && (\r\n          <CursorGhost\r\n            playerId=\"playerBlue\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerRed\" && (\r\n          <CursorGhost\r\n            playerId=\"playerRed\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerGreen\" && (\r\n          <CursorGhost\r\n            playerId=\"playerGreen\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerYellow\" && (\r\n          <CursorGhost\r\n            playerId=\"playerYellow\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n\r\n      <ToastMessageContainer messages={toastMessages} />\r\n\r\n      {clientCursor && (\r\n        <Cursor\r\n          playerId={clientData.playerId}\r\n          cursorData={clientCursor}\r\n          changeCursorX={changeCursorX}\r\n          changeCursorY={changeCursorY}\r\n          changeCursorUp={changeCursorUp}\r\n          changeCursorDown={changeCursorDown}\r\n          changeCursorHide={changeCursorHide}\r\n          viewport={viewport}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}