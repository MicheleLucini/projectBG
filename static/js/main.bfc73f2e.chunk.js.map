{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","logic/database.js","logic/utility.js","logic/campaign.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/PlayerSlot.jsx","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","components/deck/Deck.jsx","components/deck/index.js","scenes/game/Game.jsx","scenes/game/index.js","components/cursor/Cursor.jsx","components/cursor/CursorGhost.jsx","components/toastMessage/ToastMessageContainer.jsx","components/toastMessage/index.js","logic/storage.js","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","onKeyPressEnter","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","onKeyPress","window","event","key","required","appVersion","version","CLIENT_SCENES","LSKEY","CARD_SUIT_COLOR","BLACK","RED","CARD_SUIT","SPADE","HEART","DIAMOND","CLUB","CARD_RANK","ACE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","JACK","QUEEN","KING","JOKER","G","Gun","dbLog","message","params","dbPut","dbObjId","data","Promise","get","put","ack","dbRead","once","requestedData","dbSubscribe","on","_msg","_ev","dbUnsubscribe","off","uuidv4","replace","c","r","Math","random","toString","getRandomCampaignKey","result","characters","i","push","charAt","floor","length","join","cursorXPctToPx","x","viewport","width","cursorYPctToPx","y","height","getNewShuffledDeck","deck","Object","values","forEach","deckColor","rank","suit","color","getColorFromSuit","console","log","array","randomIndex","currentIndex","shuffle","createCampaign","clientData","a","newGame","creatorDeviceId","deviceId","deleteCampaign","deleted","updateCampaign","campaignData","joinCampaign","onCampaignChange","campaign","updateMyPlayer","leaveCampaign","playerId","resetMyPlayer","clientCursor","campaignKey","myPlayerData","userName","clientScene","hide","Menu","changeUserName","changeCampaignKey","changeClientScene","leaveCampaignApp","mergeGameData","addToastMessage","name","setName","onCreateCampaign","onJoinCampaign","onContinueCampaign","error","onLeaveCampaign","PlayerSlot","itsAMe","onSelectPlayer","customClass","useMemo","filter","spanText","Pregame","gameData","changePlayerId","onSelectPlayerSlot","newPlayerId","playerBlue_userName","playerBlue_deviceId","playerRed_userName","playerRed_deviceId","playerGreen_userName","playerGreen_deviceId","playerYellow_userName","playerYellow_deviceId","JoinPregame","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","zth","max","prcntg","intero","String","round","padStart","Deck","deckCards","deckLengthPercentage","deckShadow","style","boxShadow","Game","setDeckCards","useEffect","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorColor","cursorClass","mouseDown","mouseUp","handleMouseMove","cursorPositionPx2Pct","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","transform","CursorGhost","ToastMessageContainer","messages","map","lsGet","JSON","parse","localStorage","getItem","alsSet","setItem","stringify","lsSet","App","toastMessages","setToastMessages","deleteToastMessage","prev","toastMessage","setTimeout","lsValue","defaultValues","setClientData","softResetClientData","newScene","newUserName","newCampaignKey","setClientCursor","newValue","setGameData","innerHeight","innerWidth","setViewport","handleResize","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bfc73f2e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 30;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ id, text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      id={id}\r\n      className={\"simple-button\" + (disabled ? \" disabled\" : \"\")}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  id: PropTypes.string,\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  id: \"\",\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  placeholder,\r\n  onKeyPressEnter,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n  const onKeyPress = useCallback((e) => {\r\n    if (!e) e = window.event;\r\n    var keyCode = e.code || e.key;\r\n    if (keyCode === \"Enter\" && onKeyPressEnter) {\r\n      onKeyPressEnter();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  onKeyPressEnter: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n  onKeyPressEnter: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","import packageJson from \"../../package.json\";\r\n\r\nexport const appVersion = packageJson.version;\r\n\r\nexport const CLIENT_SCENES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  GAME: \"game\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"client_data\",\r\n};\r\n\r\nexport const CARD_SUIT_COLOR = {\r\n  BLACK: 1,\r\n  RED: 2,\r\n};\r\n\r\nexport const CARD_SUIT = {\r\n  SPADE: 1,\r\n  HEART: 2,\r\n  DIAMOND: 3,\r\n  CLUB: 4,\r\n};\r\n\r\nexport const CARD_RANK = {\r\n  ACE: 1,\r\n  TWO: 3,\r\n  THREE: 4,\r\n  FOUR: 5,\r\n  FIVE: 6,\r\n  SIX: 7,\r\n  SEVEN: 8,\r\n  EIGHT: 9,\r\n  NINE: 10,\r\n  TEN: 11,\r\n  JACK: 12,\r\n  QUEEN: 13,\r\n  KING: 14,\r\n  JOKER: 15,\r\n};\r\n","import Gun from \"gun\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\nconst dbLogActive = false;\r\n\r\nconst dbLog = (message?: any, ...params: any[]) => {\r\n  if (dbLogActive) console.log(message, ...params);\r\n};\r\n\r\nexport const dbPut = (dbObjId, data) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(data, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" stored: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbDelete = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).put(null, (ack) => {\r\n      dbLog(\"Data \" + dbObjId + \" deleted: \", ack);\r\n      resolve(ack);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbRead = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).once((requestedData) => {\r\n      dbLog(\"Data \" + dbObjId + \" read: \", requestedData);\r\n      resolve(requestedData);\r\n    });\r\n  });\r\n};\r\n\r\nexport const dbSubscribe = (dbObjId, onChange) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).on((value, key, _msg, _ev) => onChange(value), true);\r\n    resolve();\r\n  });\r\n};\r\n\r\nexport const dbUnsubscribe = (dbObjId) => {\r\n  return new Promise((resolve) => {\r\n    G.get(dbObjId).off();\r\n    resolve();\r\n  });\r\n};\r\n","import { CARD_RANK, CARD_SUIT, CARD_SUIT_COLOR } from \"./constants\";\r\n\r\nexport const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomCampaignKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n\r\nexport const cursorPositionPx2Pct = (x, y, viewport) => {\r\n  return {\r\n    x: (x * 100) / viewport.width,\r\n    y: (y * 100) / viewport.height,\r\n  };\r\n};\r\n\r\nexport const cursorXPctToPx = (x, viewport) => {\r\n  return (x * viewport.width) / 100;\r\n};\r\n\r\nexport const cursorYPctToPx = (y, viewport) => {\r\n  return (y * viewport.height) / 100;\r\n};\r\n\r\nexport const getNewShuffledDeck = (y, viewport) => {\r\n  const deck = [];\r\n\r\n  Object.values(CARD_SUIT_COLOR).forEach((deckColor) => {\r\n    deck.push({\r\n      rank: CARD_RANK.JOKER,\r\n      deckColor,\r\n    });\r\n    deck.push({\r\n      rank: CARD_RANK.JOKER,\r\n      deckColor,\r\n    });\r\n    Object.values(CARD_SUIT).forEach((suit) => {\r\n      Object.values(CARD_RANK).forEach((rank) => {\r\n        if (rank === CARD_RANK.JOKER) return;\r\n        deck.push({\r\n          suit,\r\n          rank,\r\n          color: getColorFromSuit(suit),\r\n          deckColor,\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  console.log(deck);\r\n\r\n  return shuffle(deck);\r\n};\r\n\r\nfunction getColorFromSuit(suit) {\r\n  if (suit === CARD_SUIT.DIAMOND || suit === CARD_SUIT.HEART)\r\n    return CARD_SUIT_COLOR.RED;\r\n  return CARD_SUIT_COLOR.BLACK;\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex != 0) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import {\r\n  dbPut,\r\n  dbDelete,\r\n  dbRead,\r\n  dbSubscribe,\r\n  dbUnsubscribe,\r\n} from \"./database\";\r\nimport { getRandomCampaignKey } from \"./utility\";\r\nimport { appVersion, CLIENT_SCENES } from \"./constants\";\r\n\r\n// const campaign = {\r\n//   key: \"\", // chiave della campagna \"AAAA\"\r\n//   appVersion: \"\", // versione app che ha creato la campagna \"0.0.4\"\r\n//   creatorDeviceId: \"\", // uuid identificativo del device che ha creato la campagna\r\n// };\r\n\r\nexport const createCampaign = async (clientData) => {\r\n  const newGame = {\r\n    key: getRandomCampaignKey(),\r\n    appVersion: appVersion,\r\n    creatorDeviceId: clientData.deviceId,\r\n  };\r\n\r\n  await dbPut(newGame.key, newGame);\r\n\r\n  return newGame;\r\n};\r\n\r\nconst deleteCampaign = async (key) => {\r\n  await dbPut(key, { deleted: true });\r\n};\r\n\r\nconst downloadCampaign = async (key) => {\r\n  return await dbRead(key);\r\n};\r\n\r\nconst subscribeCampaign = async (key, onChange) => {\r\n  await dbSubscribe(key, onChange);\r\n};\r\n\r\nconst updateCampaign = async (key, campaignData) => {\r\n  await dbPut(key, campaignData);\r\n};\r\n\r\nconst existCampaign = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return !!campaign?.key;\r\n};\r\n\r\nconst isMyCampaign = async (key) => {\r\n  if (!clientData?.deviceId) return false;\r\n  const campaign = await dbRead(key);\r\n  return campaign?.creatorDeviceId === clientData.deviceId;\r\n};\r\n\r\nconst campaignIsSameVersion = async (key) => {\r\n  const campaign = await dbRead(key);\r\n  return campaign?.appVersion === appVersion;\r\n};\r\n\r\n/* Complex game ops */\r\n\r\nexport const joinCampaign = async ({ key, clientData, onCampaignChange }) => {\r\n  if (!key || key.length !== 4) {\r\n    return \"The campaign key is not valid\";\r\n  }\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (!campaign || !campaign.key) {\r\n    return \"The campaign does not exist\";\r\n  }\r\n\r\n  if (campaign.appVersion !== appVersion) {\r\n    return \"The campaign has a different version\";\r\n  }\r\n\r\n  updateMyPlayer(clientData);\r\n\r\n  onCampaignChange(campaign);\r\n\r\n  await dbSubscribe(key, onCampaignChange);\r\n\r\n  return null;\r\n};\r\n\r\nexport const leaveCampaign = async (key, deviceId, playerId) => {\r\n  await dbUnsubscribe(key);\r\n\r\n  const campaign = await dbRead(key);\r\n\r\n  if (campaign?.creatorDeviceId === deviceId) {\r\n    await deleteCampaign(key);\r\n  } else {\r\n    await resetMyPlayer(key, playerId);\r\n  }\r\n};\r\n\r\n/* Gestione player */\r\n\r\nexport const updateMyPlayer = (clientData, clientCursor) => {\r\n  if (!clientData.playerId || !clientData.campaignKey) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[clientData.playerId + \"_deviceId\"] = clientData.deviceId;\r\n  myPlayerData[clientData.playerId + \"_userName\"] = clientData.userName;\r\n  myPlayerData[clientData.playerId + \"_clientScene\"] = clientData.clientScene;\r\n\r\n  if (\r\n    clientCursor &&\r\n    clientData.clientScene === CLIENT_SCENES.GAME\r\n  ) {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = clientCursor.x;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = clientCursor.y;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = clientCursor.hide;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = clientCursor.text;\r\n  } else {\r\n    myPlayerData[clientData.playerId + \"_cursorX\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorY\"] = 0;\r\n    myPlayerData[clientData.playerId + \"_cursorHide\"] = true;\r\n    myPlayerData[clientData.playerId + \"_cursorText\"] = null;\r\n  }\r\n\r\n  updateCampaign(clientData.campaignKey, myPlayerData);\r\n};\r\n\r\nexport const resetMyPlayer = (key, playerId) => {\r\n  if (!playerId || !key) return;\r\n\r\n  let myPlayerData = {};\r\n  myPlayerData[playerId + \"_deviceId\"] = null;\r\n  myPlayerData[playerId + \"_userName\"] = null;\r\n  myPlayerData[playerId + \"_clientScene\"] = null;\r\n  myPlayerData[playerId + \"_cursorX\"] = null;\r\n  myPlayerData[playerId + \"_cursorY\"] = null;\r\n  myPlayerData[playerId + \"_cursorHide\"] = null;\r\n  myPlayerData[playerId + \"_cursorText\"] = null;\r\n\r\n  updateCampaign(key, myPlayerData);\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES, appVersion } from \"../../logic/constants\";\r\nimport { createCampaign, joinCampaign } from \"../../logic/campaign\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({\r\n  clientData,\r\n  changeUserName,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  leaveCampaignApp,\r\n  mergeGameData,\r\n  addToastMessage,\r\n}) => {\r\n  const [name, setName] = useState(clientData.userName);\r\n\r\n  const onCreateCampaign = useCallback(async () => {\r\n    changeUserName(name);\r\n\r\n    const newGame = await createCampaign(clientData);\r\n\r\n    await joinCampaign({\r\n      key: newGame.key,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    changeCampaignKey(newGame.key);\r\n\r\n    changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    addToastMessage,\r\n    mergeGameData,\r\n    changeCampaignKey,\r\n    changeClientScene,\r\n  ]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.JOIN_LOBBY_PREGAME);\r\n  }, [changeUserName, name, changeClientScene]);\r\n\r\n  const onContinueCampaign = useCallback(async () => {\r\n    changeUserName(name);\r\n\r\n    const error = await joinCampaign({\r\n      key: clientData.campaignKey,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    if (!error) {\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(error);\r\n    }\r\n  }, [\r\n    changeUserName,\r\n    name,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const onLeaveCampaign = useCallback(() => {\r\n    leaveCampaignApp();\r\n  }, [leaveCampaignApp]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput label=\"Username\" value={name} setValue={setName} />\r\n      {clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text={\"Continue campaign \" + clientData.campaignKey}\r\n            icon=\"navigate_next\"\r\n            onClick={onContinueCampaign}\r\n          />\r\n          <Button\r\n            text={\"Leave campaign \" + clientData.campaignKey}\r\n            icon=\"logout\"\r\n            onClick={onLeaveCampaign}\r\n          />\r\n        </>\r\n      )}\r\n      {!clientData.campaignKey && (\r\n        <>\r\n          <Button\r\n            text=\"Create campaign\"\r\n            icon=\"add\"\r\n            onClick={onCreateCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n          <Button\r\n            text=\"Join campaign\"\r\n            icon=\"login\"\r\n            onClick={onJoinCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n        </>\r\n      )}\r\n      <span className=\"version\">{appVersion}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  leaveCampaignApp: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst PlayerSlot = ({ color, userName, itsAMe, onSelectPlayer }) => {\r\n  const customClass = useMemo(\r\n    () =>\r\n      [\"player\", color, userName ? null : \"locked\"]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [color, userName]\r\n  );\r\n\r\n  const spanText = useMemo(() => {\r\n    if (!userName) return \"Player \" + color + \" (bot)\";\r\n    if (itsAMe) return userName + \" (you)\";\r\n    return userName;\r\n  }, [userName, color, itsAMe]);\r\n\r\n  return (\r\n    <div className={customClass} onClick={onSelectPlayer}>\r\n      {userName ? (\r\n        <span className=\"icon material-icons-round\">face</span>\r\n      ) : (\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n      )}\r\n      <span>{spanText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayerSlot.propTypes = {\r\n  color: PropTypes.oneOf([\"blue\", \"red\", \"green\", \"yellow\"]).isRequired,\r\n  userName: PropTypes.string,\r\n  itsAMe: PropTypes.bool.isRequired,\r\n  onSelectPlayer: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayerSlot.defaultProps = {\r\n  userName: null,\r\n};\r\n\r\nexport default PlayerSlot;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport PlayerSlot from \"./PlayerSlot\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { resetMyPlayer } from \"../../logic/campaign\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({\r\n  clientData,\r\n  gameData,\r\n  changePlayerId,\r\n  changeClientScene,\r\n  addToastMessage,\r\n}) => {\r\n  const onSelectPlayerSlot = useCallback(\r\n    async (newPlayerId) => {\r\n      // Se non è già occupato\r\n      if (gameData[newPlayerId + \"_deviceId\"])\r\n        return addToastMessage(\"error\", \"Already taken\");\r\n      // Libero il posto\r\n      await resetMyPlayer(clientData.campaignKey, clientData.playerId);\r\n      // Occupo il nuovo\r\n      changePlayerId(newPlayerId);\r\n    },\r\n    [\r\n      gameData,\r\n      addToastMessage,\r\n      clientData.campaignKey,\r\n      clientData.playerId,\r\n      changePlayerId,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.campaignKey}</span>\r\n      </div>\r\n      <PlayerSlot\r\n        color=\"blue\"\r\n        userName={gameData?.playerBlue_userName}\r\n        itsAMe={gameData?.playerBlue_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerBlue\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"red\"\r\n        userName={gameData?.playerRed_userName}\r\n        itsAMe={gameData?.playerRed_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerRed\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"green\"\r\n        userName={gameData?.playerGreen_userName}\r\n        itsAMe={gameData?.playerGreen_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerGreen\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"yellow\"\r\n        userName={gameData?.playerYellow_userName}\r\n        itsAMe={gameData?.playerYellow_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerYellow\")}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      />\r\n      <Button\r\n        text=\"Start\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.GAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {\r\n  gameData: null,\r\n};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { joinCampaign } from \"../../logic/campaign\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({\r\n  clientData,\r\n  changeCampaignKey,\r\n  changeClientScene,\r\n  mergeGameData,\r\n  addToastMessage,\r\n}) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(async () => {\r\n    const error = await joinCampaign({\r\n      key: lobbyCode,\r\n      clientData,\r\n      onCampaignChange: mergeGameData,\r\n    });\r\n\r\n    if (!error) {\r\n      changeCampaignKey(lobbyCode);\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    } else {\r\n      addToastMessage(\"error\", error);\r\n    }\r\n  }, [\r\n    lobbyCode,\r\n    clientData,\r\n    mergeGameData,\r\n    changeClientScene,\r\n    addToastMessage,\r\n  ]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    if (value?.length > 4) return;\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n        onKeyPressEnter={onJoinCampaign}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeCampaignKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n  addToastMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./deck.css\";\r\n\r\nfunction zth(max, prcntg, intero) {\r\n  var x = (max * prcntg) / 100;\r\n  if (intero) return String(Math.round(x)).padStart(2, \"0\");\r\n  return Math.round(x * 10) / 10;\r\n}\r\n\r\nconst Deck = ({ deckCards }) => {\r\n  const deckLengthPercentage = useMemo(\r\n    () => (deckCards.length * 100) / 108,\r\n    [deckCards.length]\r\n  );\r\n\r\n  const deckShadow = useMemo(() => {\r\n    return (\r\n      \"0 \" + zth(20, deckLengthPercentage) + \"px 0 #ccc,\" +\r\n      \"0 \" + zth(20, deckLengthPercentage) + \"px \" + zth(40, deckLengthPercentage) + \"px rgba(0,0,0,0.\" + zth(19, deckLengthPercentage, true) + \"),\" +\r\n      \"0 \" + zth(22, deckLengthPercentage) + \"px \" + zth(16, deckLengthPercentage) + \"px rgba(0,0,0,0.\" + zth(30, deckLengthPercentage, true) + \")\"\r\n    );\r\n  }, [deckLengthPercentage]);\r\n\r\n  return <div id=\"deck\" style={{ boxShadow: deckShadow }}></div>;\r\n};\r\n\r\nDeck.propTypes = {\r\n  deckCards: PropTypes.array.isRequired,\r\n};\r\n\r\nDeck.defaultProps = {};\r\n\r\nexport default Deck;\r\n","import Deck from './Deck';\r\n\r\nexport default Deck;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport Deck from \"../../components/deck\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { getNewShuffledDeck } from \"../../logic/utility\";\r\n\r\nimport \"./game.css\";\r\n\r\nconst Game = ({ changeClientScene }) => {\r\n  const [deckCards, setDeckCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDeckCards(getNewShuffledDeck());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"game\">\r\n      <Deck deckCards={deckCards}></Deck>\r\n      <Button\r\n        id=\"back_btn\"\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.LOBBY_PREGAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGame.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nGame.defaultProps = {};\r\n\r\nexport default Game;\r\n","import Game from './Game';\r\n\r\nexport default Game;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  cursorPositionPx2Pct,\r\n  cursorXPctToPx,\r\n  cursorYPctToPx,\r\n} from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  playerId,\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n  viewport,\r\n}) => {\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event) => {\r\n      const e = event || window.event;\r\n      const { x, y } = cursorPositionPx2Pct(e.x, e.y, viewport);\r\n      changeCursorX(x);\r\n      changeCursorY(y);\r\n    },\r\n    [changeCursorX, changeCursorY, viewport]\r\n  );\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n  }, [changeCursorHide]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n  }, [changeCursorUp, changeCursorHide]);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n  }, [changeCursorUp, changeCursorDown]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n  }, [changeCursorDown, changeCursorUp]);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  }, [\r\n    handleMouseMove,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleMouseDown,\r\n    handleMouseUp,\r\n    handleContextMenu,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(cursorData.x, viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(cursorData.y, viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  playerId: PropTypes.string,\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {\r\n  playerId: null,\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { cursorXPctToPx, cursorYPctToPx } from \"../../logic/utility\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst CursorGhost = ({ playerId, gameData, viewport }) => {\r\n  if (!gameData || !gameData[playerId + \"_userName\"]) return null;\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        gameData[playerId + \"_cursorHide\"] ? \"hidden\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, gameData[playerId + \"_cursorHide\"]]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          cursorXPctToPx(gameData[playerId + \"_cursorX\"], viewport) +\r\n          \"px, \" +\r\n          cursorYPctToPx(gameData[playerId + \"_cursorY\"], viewport) +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{gameData[playerId + \"_cursorText\"]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursorGhost.propTypes = {\r\n  playerId: PropTypes.string,\r\n  gameData: PropTypes.object,\r\n  viewport: PropTypes.object.isRequired,\r\n};\r\n\r\nCursorGhost.defaultProps = {\r\n  playerId: null,\r\n  gameData: null,\r\n};\r\n\r\nexport default CursorGhost;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./toastMessage.css\";\r\n\r\nconst ToastMessageContainer = ({ messages }) => {\r\n  return (\r\n    <div id=\"toast_message_container\">\r\n      {messages?.map((message, i) => (\r\n        <div key={i} className={\"toast-message \" + message.type}>\r\n          {message.type === \"error\" && (\r\n            <span className=\"icon material-icons-round\">priority_high</span>\r\n          )}\r\n          <span className=\"text\">{message.text}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nToastMessageContainer.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n};\r\n\r\nToastMessageContainer.defaultProps = {};\r\n\r\nexport default ToastMessageContainer;\r\n","import ToastMessageContainer from \"./ToastMessageContainer\";\r\n\r\nexport default ToastMessageContainer;\r\n","// Synchronous\r\n\r\nexport const lsSet = (key, value) => {\r\n  return localStorage.setItem(\"pbg_\" + key, JSON.stringify(value));\r\n};\r\n\r\nexport const lsGet = (key, value) => {\r\n  return JSON.parse(localStorage.getItem(\"pbg_\" + key));\r\n};\r\n\r\nexport const lsRemove = (key) => {\r\n  return localStorage.removeItem(\"pbg_\" + key);\r\n};\r\n\r\n// Asynchronous\r\n\r\nexport const alsSet = (key, value) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsSet(key, value));\r\n  });\r\n};\r\n\r\nexport const alsGet = (key, value) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsGet(key));\r\n  });\r\n};\r\n\r\nexport const alsRemove = (key) => {\r\n  return new Promise((resolve) => {\r\n    resolve(lsRemove(key));\r\n  });\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport Background from \"./scenes/background\";\r\nimport Menu from \"./scenes/menu\";\r\nimport Pregame from \"./scenes/pregame\";\r\nimport JoinPregame from \"./scenes/joinPregame\";\r\nimport Game from \"./scenes/game\";\r\n\r\nimport { Cursor, CursorGhost } from \"./components/cursor\";\r\nimport ToastMessageContainer from \"./components/toastMessage\";\r\n\r\nimport { appVersion, CLIENT_SCENES, LSKEY } from \"./logic/constants\";\r\nimport { updateMyPlayer, leaveCampaign } from \"./logic/campaign\";\r\nimport { uuidv4 } from \"./logic/utility\";\r\nimport { lsGet, alsSet } from \"./logic/storage\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // TOAST MESSAGES ##########################################\r\n\r\n  const [toastMessages, setToastMessages] = useState([]);\r\n\r\n  const deleteToastMessage = useCallback((id) => {\r\n    setToastMessages((prev) =>\r\n      prev.filter((toastMessage) => toastMessage.id !== id)\r\n    );\r\n  }, []);\r\n\r\n  const addToastMessage = useCallback(\r\n    (type, text) => {\r\n      let id = uuidv4();\r\n\r\n      setToastMessages((prev) => [...prev, { id, type, text }]);\r\n\r\n      setTimeout(() => deleteToastMessage(id), 3000);\r\n    },\r\n    [deleteToastMessage]\r\n  );\r\n\r\n  // CLIENT DATA ##########################################\r\n\r\n  const [clientData, setClientData] = useState(() => {\r\n    const lsValue = lsGet(LSKEY.CLIENT_DATA);\r\n\r\n    // Se ho i dati e la versione è uguale uso quelli pulendo solo la scene corrente\r\n    if (lsValue?.appVersion === appVersion) {\r\n      return { ...lsValue, clientScene: CLIENT_SCENES.MENU };\r\n    }\r\n\r\n    const defaultValues = {\r\n      appVersion: appVersion,\r\n      deviceId: uuidv4(),\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      userName: \"\",\r\n      campaignKey: null,\r\n      playerId: null,\r\n    };\r\n\r\n    // Se ho i dati, la versione è diversa e ho il vecchio device id pulisco tutto mantenendo quello e lo user name\r\n    if (lsValue && lsValue.appVersion !== appVersion && !!lsValue.deviceId) {\r\n      return {\r\n        ...defaultValues,\r\n        deviceId: lsValue.deviceId,\r\n        userName: lsValue.userName,\r\n      };\r\n    }\r\n\r\n    return defaultValues;\r\n  });\r\n\r\n  useEffect(() => {\r\n    alsSet(LSKEY.CLIENT_DATA, clientData);\r\n  }, [clientData]);\r\n\r\n  const softResetClientData = useCallback(() => {\r\n    setClientData((prev) => ({\r\n      ...prev,\r\n      clientScene: CLIENT_SCENES.MENU,\r\n      campaignKey: null,\r\n      playerId: null,\r\n    }));\r\n  }, []);\r\n\r\n  const changeClientScene = useCallback((newScene) => {\r\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\r\n  }, []);\r\n\r\n  const changeUserName = useCallback((newUserName) => {\r\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\r\n  }, []);\r\n\r\n  const changeCampaignKey = useCallback((newCampaignKey) => {\r\n    setClientData((prev) => ({ ...prev, campaignKey: newCampaignKey }));\r\n  }, []);\r\n\r\n  const changePlayerId = useCallback((newPlayerId) => {\r\n    setClientData((prev) => ({ ...prev, playerId: newPlayerId }));\r\n  }, []);\r\n\r\n  // CLIENT DATA CURSOR ##########################################\r\n\r\n  const [clientCursor, setClientCursor] = useState({\r\n    x: 0,\r\n    y: 0,\r\n    mouseUp: false,\r\n    mouseDown: false,\r\n    hide: true,\r\n    text: \"\",\r\n  });\r\n\r\n  const changeCursorX = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      x: newValue,\r\n      hide: false,\r\n    }));\r\n  }, []);\r\n  const changeCursorY = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      y: newValue,\r\n      hide: false,\r\n    }));\r\n  }, []);\r\n  const changeCursorUp = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      mouseUp: newValue,\r\n    }));\r\n  }, []);\r\n  const changeCursorDown = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      mouseDown: newValue,\r\n    }));\r\n  }, []);\r\n  const changeCursorHide = useCallback((newValue) => {\r\n    setClientCursor((prev) => ({\r\n      ...prev,\r\n      hide: newValue,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateMyPlayer(clientData, clientCursor);\r\n  }, [clientData, clientCursor]);\r\n\r\n  // GAME DATA ##########################################\r\n\r\n  const [gameData, setGameData] = useState(null);\r\n\r\n  const leaveCampaignApp = useCallback(() => {\r\n    leaveCampaign(\r\n      clientData.campaignKey,\r\n      clientData.deviceId,\r\n      clientData.playerId\r\n    );\r\n    softResetClientData();\r\n    setGameData(null);\r\n  }, [\r\n    clientData.campaignKey,\r\n    clientData.deviceId,\r\n    clientData.playerId,\r\n    softResetClientData,\r\n  ]);\r\n\r\n  const mergeGameData = useCallback(\r\n    (newValue) => {\r\n      if (newValue?.deleted === true) {\r\n        leaveCampaignApp();\r\n        return;\r\n      }\r\n      setGameData((prev) => ({\r\n        ...prev,\r\n        ...newValue,\r\n      }));\r\n    },\r\n    [leaveCampaignApp]\r\n  );\r\n\r\n  // VIEWPORT ##########################################\r\n\r\n  const [viewport, setViewport] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  const handleResize = useCallback(\r\n    () => setViewport({ height: window.innerHeight, width: window.innerWidth }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [handleResize]);\r\n\r\n  // EFFETTI ##########################################\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"gameData changed: \", { ...gameData });\r\n  // }, [gameData]);\r\n\r\n  return (\r\n    <>\r\n      <Background />\r\n      {CLIENT_SCENES.MENU === clientData.clientScene && (\r\n        <Menu\r\n          clientData={clientData}\r\n          changeUserName={changeUserName}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          leaveCampaignApp={leaveCampaignApp}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.LOBBY_PREGAME === clientData.clientScene && (\r\n        <Pregame\r\n          clientData={clientData}\r\n          gameData={gameData}\r\n          changePlayerId={changePlayerId}\r\n          changeClientScene={changeClientScene}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\r\n        <JoinPregame\r\n          clientData={clientData}\r\n          changeCampaignKey={changeCampaignKey}\r\n          changeClientScene={changeClientScene}\r\n          mergeGameData={mergeGameData}\r\n          addToastMessage={addToastMessage}\r\n        />\r\n      )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene && (\r\n        <Game changeClientScene={changeClientScene} />\r\n      )}\r\n\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerBlue\" && (\r\n          <CursorGhost\r\n            playerId=\"playerBlue\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerRed\" && (\r\n          <CursorGhost\r\n            playerId=\"playerRed\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerGreen\" && (\r\n          <CursorGhost\r\n            playerId=\"playerGreen\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n      {CLIENT_SCENES.GAME === clientData.clientScene &&\r\n        clientData.playerId !== \"playerYellow\" && (\r\n          <CursorGhost\r\n            playerId=\"playerYellow\"\r\n            gameData={gameData}\r\n            viewport={viewport}\r\n          />\r\n        )}\r\n\r\n      <ToastMessageContainer messages={toastMessages} />\r\n\r\n      {clientCursor && (\r\n        <Cursor\r\n          playerId={clientData.playerId}\r\n          cursorData={clientCursor}\r\n          changeCursorX={changeCursorX}\r\n          changeCursorY={changeCursorY}\r\n          changeCursorUp={changeCursorUp}\r\n          changeCursorDown={changeCursorDown}\r\n          changeCursorHide={changeCursorHide}\r\n          viewport={viewport}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}